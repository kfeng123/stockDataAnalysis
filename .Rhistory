data1=read.csv("myData.csv")
date=read.csv("myDate.csv",stringsAsFactors = FALSE)
data2=data1[2:nrow(data1),]/data1[1:(nrow(data1)-1),]
data2=rbind(1,data2)
D=data2
D=log(data2)
D[is.na(D)]=0
theWeekDay=format(as.Date(date[,1]),"%u")
X1=D[theWeekDay==1,]
X2=D[theWeekDay!=1,]
X1=as.matrix(X1)
X2=as.matrix(X2)
p=ncol(X1)
str(X1)
data1=read.csv("myData.csv")
date=read.csv("myDate.csv",stringsAsFactors = FALSE)
data2=data1[2:nrow(data1),]/data1[1:(nrow(data1)-1),]
data2=rbind(1,data2)
D=data2
D=log(data2)
theMissing=colMeans(is.na(D))
hist(theMissing)
summary(theMissing)
table(theMissing)
D=D[,theMissing==0]
theWeekDay=format(as.Date(date[,1]),"%u")
X1=D[theWeekDay==1,]
X2=D[theWeekDay!=1,]
X1=as.matrix(X1)
X2=as.matrix(X2)
p=ncol(X1)
source("./stat.R")
source("./permutationTest.R")
JJJ=myPermutation(X1,X2,n1=nrow(X1),n2=nrow(X2),B=50,rmax=10)
JJJ
rmax=10
S=((n1-1)*var(X1)+(n2-1)*var(X2))/(n1+n2-2)
myEigen=eigen(S,symmetric = TRUE)
n1=nrow(X1)
n2=nrow(X2)
S=((n1-1)*var(X1)+(n2-1)*var(X2))/(n1+n2-2)
myEigen=eigen(S,symmetric = TRUE)
theTemp=myEigen$values[1:(n1+n2-3)]/myEigen$values[2:(n1+n2-2)]
myRhat=which.max(theTemp[1:rmax])
myTildeV=myEigen$vectors[,-(1:myRhat)]
# variance estimator
varEstimator1=mean(myEigen$values[(myRhat+1):p])
varEstimator2=mean(myEigen$values[(2*myRhat+1):(p-2*myRhat)])
chenStat(X1%*%myTildeV,X2%*%myTildeV,n1,n2)
chenStat(X1,X2,n1,n2)
chenStat(X1%*%myEigen$vectors[,1],X2%*%myEigen$vectors[,1],n1,n2)
varEstimator1
varEstimator2
my = myStat(X1, X2, n1, n2, rmax)
myT1=n1*n2*my$stat/(sqrt(2*p)*(n1+n2)*my$varEstimator1)
pnorm(myT1,0,1,lower.tail = FALSE)
myRhat
JJJ=myPermutation(X1,X2,n1=nrow(X1),n2=nrow(X2),B=100,rmax=10)
JJJ
eigen(var(X1))
eigen(var(X1))$values[1:100]
